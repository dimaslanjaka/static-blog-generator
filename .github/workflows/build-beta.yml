name: Build Beta

on:
  push:
    branches: [ "beta" ]
    paths:
      - '**/src/**'
  pull_request:
    types:
      - closed
  workflow_dispatch:

# run single job
concurrency:
  group: build
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: true
    env:
      NODE_OPTIONS: "--max-old-space-size=8192"

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: dimaslanjaka/static-blog-generator
          ref: beta
          token: ${{ secrets.ACCESS_TOKEN }}
      - run: sh scripts/install-submodules.sh
        name: clone submodules
      - name: Set env
        id: set-env
        shell: bash
        run: |
          echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
          echo "GITHUB_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          echo "GITHUB_COMMIT_URL=https://github.com/${{github.repository}}/commit/$(echo $GITHUB_SHA)" >> $GITHUB_ENV
          echo "GITHUB_RUNNER_URL=https://github.com/${{github.repository}}/commit/${{github.sha}}/checks/${{github.run_id}}" >> $GITHUB_ENV
          echo "CACHE_NPM=$(npm config get cache)" >> $GITHUB_ENV
          echo "CACHE_YARN=$(yarn cache dir)" >> $GITHUB_ENV
          echo "CACHE_YARN2=$(yarn config get cacheFolder)" >> $GITHUB_ENV
          echo "cache-npm=$(npm config get cache)" >> $GITHUB_OUTPUT
          echo "cache-yarn=$(yarn cache dir)" >> $GITHUB_OUTPUT
          echo "cache-yarn2=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: Get env
        run: |
          echo "branch      : ${{ env.GITHUB_BRANCH }}"
          echo "commit msg  : ${{ github.event.head_commit.message }}"
          echo "commit hash : ${{ env.GITHUB_SHA_SHORT }}"
          echo "commit url  : ${{ env.GITHUB_COMMIT_URL }}"
          echo "runner url  : ${{ env.GITHUB_RUNNER_URL }}"
          echo "cache npm   : ${{ env.CACHE_NPM }}"
          echo "cache yarn  : ${{ env.CACHE_YARN }}"
          echo "cache yarn2 : ${{ env.CACHE_YARN2 }}"

      - name: Set EOL git configs
        continue-on-error: true
        run: |
          git config core.eol lf
          git config core.autocrlf input
          git checkout-index --force --all

      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          token: ${{ secrets.GITHUB_TOKEN }}
          architecture: x64
          cache: 'yarn'
          cache-dependency-path: '**/yarn.lock'

      - name: Enable corepack
        run: |
          corepack enable
          corepack prepare yarn@3.2.0 --activate

      - uses: actions/cache@v3 # pat-s/always-upload-cache@v3.0.11
        id: cache
        name: get caches
        with:
          path: |
            ${{ steps.set-env.outputs.cache-npm }}
            ${{ steps.set-env.outputs.cache-yarn }}
            ${{ steps.set-env.outputs.cache-yarn2 }}
            **/packages/**/dist/**
            ./packages/sbg-server/src/public
            **/tmp/**
            **/node_modules/**
            **/.yarn
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-

      - name: Install Global Packages
        run: npm i -g typescript ts-node gulp-cli hexo-cli webpack-cli npm-run-all depcheck lerna husky

      - run: yarn install --immutable
      - run: lerna run build
      - run: lerna exec npm run pack
      - name: commit sub projects
        continue-on-error: true
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          sh scripts/commit.sh "feat: update build from ${{ env.GITHUB_COMMIT_URL }} runner ${{ env.GITHUB_RUNNER_URL }}"
      - run: |
          git add -A
          git commit -m "chore(dist): build from ${{ env.GITHUB_COMMIT_URL }}" -m "commit hash: ${{ env.GITHUB_SHA_SHORT }}" -m "commit url: ${{ env.GITHUB_COMMIT_URL }}" -m "runner: ${{ env.GITHUB_RUNNER_URL }}"
        name: commit root project
        continue-on-error: true
      - run: sh scripts/push.sh
        name: push
        continue-on-error: true
