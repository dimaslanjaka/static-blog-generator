name: Build Docs

on:
  push:
    branches: [ "master", "main" ]
    paths-ignore:
      - '**/*.tgz'
      - '**/*.gz'
      - '**/release/**'
      - '**garbage-collector**'
      - '**codeql**'
  pull_request:
    types:
      - closed
    paths-ignore:
      - '**/release/**'
      - '**/*.tgz'
      - '**/*.gz'
      - '**/test*/**'
  workflow_dispatch:

# run single job
concurrency:
  group: docs-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: true
      max-parallel: 6

    runs-on: ubuntu-latest

    name: Build Docs
    steps:
      - uses: actions/checkout@v3
        with:
          ref: master
          token: ${{ secrets.ACCESS_TOKEN }}
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          repository: dimaslanjaka/docs
          ref: master
          path: docs

      - name: Set env
        id: set-env
        shell: bash
        run: |
          echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
          echo "GITHUB_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          echo "GITHUB_COMMIT_URL=https://github.com/${{github.repository}}/commit/$(echo $GITHUB_SHA)" >> $GITHUB_ENV
          echo "GITHUB_RUNNER_URL=https://github.com/${{github.repository}}/commit/${{github.sha}}/checks/${{github.run_id}}" >> $GITHUB_ENV
          echo "CACHE_NPM=$(npm config get cache)" >> $GITHUB_ENV
          echo "CACHE_YARN=$(yarn cache dir)" >> $GITHUB_ENV
          echo "CACHE_YARN2=$(yarn config get cacheFolder)" >> $GITHUB_ENV
          echo "cache-npm=$(npm config get cache)" >> $GITHUB_OUTPUT
          echo "cache-yarn=$(yarn cache dir)" >> $GITHUB_OUTPUT
          echo "cache-yarn2=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
          echo "/home/runner/node_modules/.bin" >> $GITHUB_PATH
          echo "/home/runner/bin" >> $GITHUB_PATH

      - name: Get env
        run: |
          echo "branch      : ${{ env.GITHUB_BRANCH }}"
          echo "commit msg  : ${{ github.event.head_commit.message }}"
          echo "commit hash : ${{ env.GITHUB_SHA_SHORT }}"
          echo "commit url  : ${{ env.GITHUB_COMMIT_URL }}"
          echo "runner url  : ${{ env.GITHUB_RUNNER_URL }}"
          echo "cache npm   : ${{ env.CACHE_NPM }}"
          echo "cache yarn  : ${{ env.CACHE_YARN }}"
          echo "cache yarn2 : ${{ env.CACHE_YARN2 }}"

      - name: Set EOL git configs
        continue-on-error: true
        run: |
          git config core.eol lf
          git config core.autocrlf input
          git checkout-index --force --all

      - name: Pull & update submodules recursively
        continue-on-error: true
        run: |
          git submodule update --init --recursive
          git submodule update --recursive --remote
          git pull -X theirs

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          token: ${{ secrets.GITHUB_TOKEN }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Enable corepack
        run: corepack enable

      - uses: actions/cache@v3
        id: cache
        with:
          path: |
            ${{ steps.set-env.outputs.cache-npm }}
            ${{ steps.set-env.outputs.cache-yarn }}
            ${{ steps.set-env.outputs.cache-yarn2 }}
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
            ${{ runner.os }}-

      - name: Check Updates
        shell: bash
        continue-on-error: true
        run: |
          curl -L https://github.com/dimaslanjaka/nodejs-package-types/raw/main/postinstall.js > postinstall.js
          npm run update

      - name: Install Global Packages
        run: npm i -g typescript ts-node gulp-cli hexo-cli webpack-cli

      - name: Install
        run: npm install
        shell: bash

      - name: Git setup user email
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
      - run: git pull -X theirs
        name: Git pull
        continue-on-error: true
        working-directory: ./docs
      - run: npm test
        name: run test
        shell: bash
      - run: npm run docs
        name: run docs
        shell: bash
      - name: Git push
        continue-on-error: true
        working-directory: ./docs
        run: |
          git add -A
          git commit -m "Update build from ${{ env.GITHUB_COMMIT_URL }}" -m "commit hash: ${{ env.GITHUB_SHA_SHORT }}" -m "commit url: ${{ env.GITHUB_COMMIT_URL }}" -m "runner: ${{ env.GITHUB_RUNNER_URL }}"
          git push
